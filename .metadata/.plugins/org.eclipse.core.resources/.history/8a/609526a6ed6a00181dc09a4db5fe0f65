/*
 * motor_handler.c
 *
 *  Created on: 06 giu 2018
 *      Author: mattiaditrolio
 */

#include "motor_handler.h"


void send_command_motor(UART_HandleTypeDef* huart,char command,char speed){
	char address = H_BRIDGE_ADDR;

	char checksum = (address + command + speed) & 0b01111111;

	HAL_UART_Transmit(huart, (uint8_t*)&address, sizeof(address), 0xFFFFFF);
	HAL_UART_Transmit(huart, (uint8_t*)&command, sizeof(command), 0xFFFFFF);
	HAL_UART_Transmit(huart, (uint8_t*)&speed, sizeof(speed), 0xFFFFFF);
	HAL_UART_Transmit(huart, (uint8_t*)&checksum, sizeof(checksum), 0xFFFFFF);


}

void drive_forward(UART_HandleTypeDef* huart, char speed){
	turn_left(huart, 0);
	turn_right(huart,0);
	char command = 8;
	send_command_motor(huart,command,speed);
}

void drive_backwards(UART_HandleTypeDef* huart, char speed){
	turn_left(huart, 0);
	turn_right(huart,0);
	char command = 9;
	send_command_motor(huart,command,speed);
}

void turn_right(UART_HandleTypeDef* huart, char speed){
	char command = 10;
	send_command_motor(huart,command,speed);
}

void turn_left(UART_HandleTypeDef* huart, char speed){
	char command = 11;
	send_command_motor(huart,command,speed);
}

void stop_motors(UART_HandleTypeDef* huart){
	turn_left(huart, 0);
	turn_right(huart,0);
	drive_backwards(huart, 0);
	drive_forward(huart, 0);
}

void motor_Init(UART_HandleTypeDef* huart)
{
	char address = H_BRIDGE_ADDR;
	char command = 11;
	char speed = 0;
	char checksum = (address + command + speed) & 0b01111111;
	HAL_UART_Transmit(huart, (uint8_t*)&address, sizeof(address), 0xFFFFFF);
	HAL_UART_Transmit(huart, (uint8_t*)&command, sizeof(command), 0xFFFFFF);
	HAL_UART_Transmit(huart, (uint8_t*)&speed, sizeof(speed), 0xFFFFFF);
	HAL_UART_Transmit(huart, (uint8_t*)&checksum, sizeof(checksum), 0xFFFFFF);

	HAL_Delay(1000);

}

void motor_encoder(){
	uint16_t cnt1 = 0, cnt2 = 0;
	uint16_t diff = 0;
	char msg[80];
	cnt2 = __HAL_TIM_GET_COUNTER(&htim1);
	if (__HAL_TIM_IS_TIM_COUNTING_DOWN(&htim1)) {
		if (cnt2 < cnt1)
			diff = cnt1 - cnt2;
		else
			diff = (65535 - cnt2) + cnt1;
	} else {
		if (cnt2 > cnt1)
			diff = cnt2 - cnt1;
		else
			diff = (65535 - cnt1) + cnt2;
	}

	sprintf(msg, "Difference: %d\r\n", diff);
	HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg),0xFFFF);

	sprintf(msg, "CNT1: %d\r\n", cnt1);
	HAL_UART_Transmit(&huart2, (uint8_t*) msg, strlen(msg), 0xFFFF);
	sprintf(msg, "CNT2: %d\r\n", cnt2);
	HAL_UART_Transmit(&huart2, (uint8_t*) msg, strlen(msg), 0xFFFF);

	speed = ((diff / 4) / 60);

	if ((TIM1->SMCR & 0x3) == 0x3) {
		speed /= 2;
	}


	sprintf(msg, "Speed: %d\r\n", speed);
	HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg),0xFFFF);

	cnt1 = __HAL_TIM_GET_COUNTER(&htim1);

}
